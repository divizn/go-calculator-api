{
    "swagger": "2.0",
    "info": {
        "description": "CRUD API that takes 2 numbers and an operand, and stores it with the result in a database.",
        "title": "Calculator API",
        "contact": {
            "name": "Repository",
            "url": "http://github.com/divizn/go-calculator-api"
        },
        "version": "1.0"
    },
    "paths": {
        "/calculations": {
            "get": {
                "description": "Get all calculations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Shows all calculations in the database",
                "operationId": "get-all-calculations",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Calculation"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Createc calculation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a calculation",
                "operationId": "create-calculation",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCalculationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "$ref": "#/definitions/models.Calculation"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.CalcError"
                        }
                    }
                }
            }
        },
        "/calculations/{id}": {
            "get": {
                "description": "Get calculation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a calculation from the given ID",
                "operationId": "get-calculation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Calculation"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/models.CalcError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update calculation from given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a calculation from a given ID",
                "operationId": "update-calculation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCalculationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Calculation"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.CalcError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Update calculation from given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a calculation from a given ID",
                "operationId": "delete-calculation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CalcError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message goes here"
                }
            }
        },
        "models.Calculation": {
            "type": "object",
            "required": [
                "number1",
                "number2",
                "operator"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "number1": {
                    "type": "number",
                    "example": 1
                },
                "number2": {
                    "type": "number",
                    "example": 1
                },
                "operator": {
                    "type": "string",
                    "example": "+"
                },
                "result": {
                    "type": "number",
                    "example": 2
                }
            }
        },
        "models.CreateCalculationRequest": {
            "type": "object",
            "required": [
                "number1",
                "number2",
                "operator"
            ],
            "properties": {
                "number1": {
                    "type": "number",
                    "example": 1
                },
                "number2": {
                    "type": "number",
                    "example": 1
                },
                "operator": {
                    "type": "string",
                    "example": "+"
                }
            }
        },
        "models.UpdateCalculationRequest": {
            "type": "object",
            "properties": {
                "number1": {
                    "type": "number",
                    "example": 1
                },
                "number2": {
                    "type": "number",
                    "example": 1
                },
                "operator": {
                    "type": "string",
                    "example": "+"
                }
            }
        }
    }
}