// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Repository",
            "url": "http://github.com/divizn/go-calculator-api"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/calculations": {
            "get": {
                "description": "Get all calculations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Shows all calculations in the database",
                "operationId": "get-all-calculations",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Calculation"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Createc calculation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a calculation",
                "operationId": "create-calculation",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCalculationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "$ref": "#/definitions/models.Calculation"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.CalcError"
                        }
                    }
                }
            }
        },
        "/calculations/{id}": {
            "get": {
                "description": "Get calculation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a calculation from the given ID",
                "operationId": "get-calculation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Calculation"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/models.CalcError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update calculation from given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a calculation from a given ID",
                "operationId": "update-calculation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCalculationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Calculation"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.CalcError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Update calculation from given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a calculation from a given ID",
                "operationId": "delete-calculation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Some ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authenticate user and return a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login a user",
                "operationId": "login-user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "logged in",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.UserError"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.UserError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.UserError"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register a new user",
                "operationId": "register-user",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/models.UserError"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.UserError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CalcError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "calculation error occured"
                }
            }
        },
        "models.Calculation": {
            "type": "object",
            "required": [
                "number1",
                "number2",
                "operator"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "number1": {
                    "type": "number",
                    "example": 1
                },
                "number2": {
                    "type": "number",
                    "example": 1
                },
                "operator": {
                    "type": "string",
                    "example": "+"
                },
                "result": {
                    "type": "number",
                    "example": 2
                }
            }
        },
        "models.CreateCalculationRequest": {
            "type": "object",
            "required": [
                "number1",
                "number2",
                "operator"
            ],
            "properties": {
                "number1": {
                    "type": "number",
                    "example": 1
                },
                "number2": {
                    "type": "number",
                    "example": 1
                },
                "operator": {
                    "type": "string",
                    "example": "+"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.LoginUserRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.RegisterUserRequest": {
            "type": "object",
            "required": [
                "password",
                "user_role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "user_role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "adder",
                        "subtracter",
                        "divider",
                        "multiplier",
                        "other"
                    ]
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCalculationRequest": {
            "type": "object",
            "properties": {
                "number1": {
                    "type": "number",
                    "example": 1
                },
                "number2": {
                    "type": "number",
                    "example": 1
                },
                "operator": {
                    "type": "string",
                    "example": "+"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "user_role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "login/register error occured"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Calculator API",
	Description:      "CRUD API that takes 2 numbers and an operand, and stores it with the result in a database.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
