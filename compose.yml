services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_DSN: "postgres://${DB_USERNAME}:${DB_PASSWORD}@psql:${DB_PORT}/${DB_DATABASE}?sslmode=disable"
      REDIS_ADDR: "redis:${REDIS_PORT}"
    depends_on:
      - psql
      - redis
    profiles:
      - app

  psql:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - psql_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_DATABASE}"]
      interval: 30s
      retries: 5
      start_period: 5s
      timeout: 10s

  redis:
    image: redis:latest
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_volume:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 5
      start_period: 5s
      timeout: 10s
  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_volume:/var/lib/mongodb/data

volumes:
  psql_volume:
  redis_volume:
  mongo_volume:
